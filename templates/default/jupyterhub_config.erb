# jupyterhub_config.py
c = get_config()

import os
pjoin = os.path.join

runtime_dir = os.path.join('<%= node['jupyterhub']['runtime_dir'] %>')

<% if node['jupyterhub']['use_ssl'] -%>
# https
c.JupyterHub.port = <%= node['jupyterhub']['https_port'] %>
c.JupyterHub.ssl_key = '<%= node['jupyterhub']['ssl_key'] %>'
c.JupyterHub.ssl_cert = '<%= node['jupyterhub']['ssl_cert'] %>'
<% else %>
# http
c.JupyterHub.port = <%= node['jupyterhub']['http_port'] %>
<% end -%>

# put the JupyterHub cookie secret and state db
# in /srv/jupyterhub
c.JupyterHub.cookie_secret_file = pjoin(runtime_dir, 'cookie_secret')
c.JupyterHub.db_url = pjoin(runtime_dir, 'jupyterhub.sqlite')
# or `--db=/path/to/jupyterhub.sqlite` on the command-line

# put the log file in /var/log
c.JupyterHub.extra_log_file = '<%= node['jupyterhub']['log_dir']%>/jupyterhub.log'

# create system users that don't exist yet
c.LocalAuthenticator.create_system_users = <%= node['jupyterhub']['create_system_users'] %>

# specify users and admin
<% unless node['jupyterhub']['users'].empty? -%>
c.Authenticator.whitelist = {<%= node['jupyterhub']['users'].map { |u| "'" + u.to_s + "'" }.join(", ") %>}
<% end -%>
<% unless node['jupyterhub']['admins'].empty? -%>
c.Authenticator.admin_users = {<%= node['jupyterhub']['admins'].map { |a| "'" + a.to_s + "'" }.join(", ") %>}
<% end -%>

# start single-user notebook servers in ~/notebooks,
# with ~/notebooks/Welcome.ipynb as the default landing page
# this config could also be put in
# /etc/ipython/ipython_notebook_config.py
c.Spawner.notebook_dir = '~/notebooks'
